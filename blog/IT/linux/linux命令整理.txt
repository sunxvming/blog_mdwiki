【注意】
拿到一台linux机器的时候要先看看是什么版本的，因为不同版本的命令是有些差别的
网站向Linux迁移时 注意  1. 修改读写权限，2. 数据库的导入 ，3.时区 PRC   文件名不能有中文  4. 大小写敏感问题


windows下的文件上传到linux上文件的/r/n，可能会被上传的软件自动变变成适应linux上的格式
如果不是，记得转换格式


uname -a # 查看内核/操作系统信息


【shell】
------------------------
1   Executable programs or shell commands
2   System calls (functions provided by the kernel)
3   Library calls (functions within program libraries)
4   Special files (usually found in /dev)




shell：命令解释器，根据输入的命令执行相应程序 
bash是一个为GNU计划编写的Unixshell，bash是许多Linux平台的内定Shell，事实上，还有许多传统UNIX上用的Shell。Shell Script大致都类同，当您学会一种Shell以后，其 它的Shell会很快就上手，大多数的时候，一个Shell Script通常可以在很多种Shell上使用
查看所有shells cat /etc/shells 


tab 命令和路径补齐
history  历史记录
Ctrl-r  搜索某个历史记录




主键盘快捷键
bash的快捷键和emacs保持一致
尽量使用主键盘快捷键而不使用移动光标键和编辑键。因为手不必离开主键盘是效率最高的


功能    快捷键         助记
上       Ctrl-p         previous
下       Ctrl-n         next
左       Ctrl-b         backward
右       Ctrl-f         forward
Del         Ctrl-d         delete光标后面的
Home     Ctrl-a         the first letter
End         Ctrl-e         end


Ctrl+U：清空至行首
Ctrl+K：清空至行尾
Ctrl+L：清屏
Ctrl+C：取消本次命令编辑


反斜杠“\”：强制换行


【配置文件】
系统级的   
    /etc/profile    System wide environment and startup programs written here
    /etc/bashrc     System wide functions and aliases written here


用户级的
    ~/.bash_profile
    ~/.bashrc  rc  run commands的缩写
    
设置可以在当前目录查找可执行文件的方法
    打开宿主目录下的用户配置文件”.bash_profile”
    在PATH后面追加”:.”  
    source .bash_profile
    
source
    这个命令其实只是简单地读取脚本里面的语句依次在当前shell里面执行，没有建立新的子shell。
    那么脚本里面所有新建、改变变量的语句都会保存在当前shell里面。
    source命令通常用于重新执行刚修改的初始化文件，使之立即生效，而不必注销并重新登录
    source命令(从C Shell而来)是bash shell的内置命令;点命令(.),(从Bourne Shell而来)是source的另一名称
    
    sh filename和./filename，重新建立一个子shell，在子shell中执行脚本里面的语句，该子shell继承父shell
    的环境变量，但子shell新建的、改变的变量不会被带回父shell，


hosts文件 /etc/hosts  格式为 ip  host， 改后ping一下就好 
env # 查看环境变量资源




export  查看所有环境变量
修改环境变量
export PATH=$PATH:/home/uusama/mysql/bin




【目录和文件】
---------------------------
cd  进入个人的主目录 
cd - 返回上次所在的目录 
ls -lSr|less 以尺寸大小排列文件和目录 
tree 显示目录结构，需要额外下载此程序 


file filename 查看文件的类型详细信息
cat more less head tail 查看文件 
    cat aa.txt bb.txt > cc.txt  合并到一个文件
tail -f /var/log/messages 实时查看被添加到一个文件中的内容 


touch  新建文件
mkdir -p /path  创建级联目录
ln xx xx ln -s xx xx 建立硬链接和软连接 不能建立指向目录的硬链接 
wc 统计数量 -l 或–lines 只显示列数。-w 或–words 只显示字数。 


cp -R 源路径 新路径     --recursive
scp root@192.168.2.208:/home/a.txt /home 
    scp 服务器用户名@iP地址:服务端文件路径 客户端保存路径


iconv - convert text from one character encoding to another


【文件相关】
chmod 755 for.sh  绝对法 4r 2w 1x
chmod o+x for.sh  相对法 u  g o
chmod u=rwx,og=rx for.sh
chown user1:group1 file1 改变file1的所有人和群组属性 
    chown -R  use1 /var/www/food   递归的
chgrp group1 file1 改变file1的群组


chattr 文件的特殊属性 - 使用 "+" 设置权限，使用 "-" 用于取消 
chattr +a file1 只允许以追加方式读写文件 
chattr +i file1 设置成不可变的文件，不能被删除、修改、重命名或者链接 


【打包和压缩文件】
zip file1.zip file1 创建一个zip格式的压缩包 
unzip file1.zip 解压一个zip格式压缩包 


tar -zcvf archive.tar.gz dir1 创建一个gzip格式的压缩包 
tar -zxvf archive.tar.gz 解压一个gzip格式的压缩包 


【磁盘管理】
du -h 查看目录大小   默认是递归的
du -h --max-depth=1 work/testing    指定查看的深度
df --block-size=GB df --block-size=MB 查看磁盘使用情况


fdisk -l  查看所有硬盘
parted /dev/sdb  查看某个硬盘信息
mkfs -t ext3 /dev/sdb1    格式化磁盘为ext3系统


mount /dev/hda2 /mnt/hda2 挂载一个叫做hda2的盘 - 确定目录 '/mnt/hda2' 已经存在 
umount /dev/hda2 卸载一个叫做hda2的盘 - 先从挂载点 '/mnt/hda2' 退出 




【文本处理】
cat file1 | command( sed, grep, awk, grep, etc...) > result.txt 




dos2unix filedos.txt fileunix.txt 将一个文本文件的格式从MSDOS转换成UNIX 
unix2dos fileunix.txt filedos.txt 将一个文本文件的格式从UNIX转换成MSDOS 


indent是linux下的一个代码格式的的工具，格式化c代码    
indent -bad -bli 0 -ce -kr -nsob --space-after-if --space-after-while --space-after-for --use-tabs -i8


【查找与检索】
------------------------
find [OPTION] path… [expression] 
find /root/me -name 'file*' 
    -name：按文件名称查找
    -size：按文件大小查找
    -user：按文件属主查找
    -type：按文件类型查找
locate \*.ps 寻找以 '.ps' 结尾的文件 - 先运行 'updatedb' 命令 
 
grep -n eee hello.txt  在hello.txt查找eee, -n是显示行号 
grep 'printf' /usr/include -R 在include目录下查找所有包含printf的文件 -R是递归的


whereis halt 显示一个二进制文件、源码或man的位置 
which halt 显示一个二进制文件或可执行文件的完整路径 






【系统管理】
------------------
shutdown -h now 关机
shutdown -r now 重启
reboot          重启


who 查看登录的终端    
pkill -kill -t pts/2   踢人


last # 查看用户登录日志
crontab -l # 查看当前用户的计划任务服务


cut -d: -f1 /etc/passwd # 查看系统所有用户
cut -d: -f1 /etc/group # 查看系统所有组




【用户和用户组组】
-----------------
useradd user1 创建一个新用户 
    用useradd增长一个新用户之后,还不能立即使用,得给新用户设一个密码才可以使用.
useradd -c "Name Surname " -g admin -d /home/user1 -s /bin/bash user1 创建一个属于 "admin" 用户组的用户 
userdel -r user1 删除一个用户 ( '-r' 排除主目录) 
usermod -c "User FTP" -g system -d /ftp/user1 -s /bin/nologin user1 修改用户属性 


groupadd group_name 创建一个新用户组 
groupdel group_name 删除一个用户组 
groupmod -n new_group_name old_group_name 重命名一个用户组


passwd user1 修改一个用户的口令 (只允许root执行) 


su – root  -中间有空格
    加-后,不仅切换到其他用户,而且环境变量这些什么的都切换成其他用户的.




【进程控制】
ps aux|grep mysqld 
pwdx <pid>  通过pid 寻找程序路径
    每个进程启动之后在 /proc下面有一个于pid对应的路径，进入进程号的目录后可以得到很多关于进程的信息
ps -ef # 查看所有进程
ctrl+z  程序已经在前台运行，执行ctrl+z就可以放入后台
fg      把后台执行的程序恢复到前台来运行
jobs    如果有多个进程在后台运行，执行jobs命令，能够列出所有在后台执行的进程
fg %number  jobs命令列出的，中括号([ ])里面的数字就是 jobs 的代号，通过fg %number 就可以恢复指定的后台进程


nohup /opt/lampp/sbin/mysqld &    no hang up
nohup command >out.file 2>&1 &    后台运行处理输出




free -m -s 3    -s 表示刷新的时间间隔,秒为单位
netstat -apn | grep 80
pkill -9 http
top # 实时显示进程状态用户


【网络】
网络配置文件 /etc/sysconfig/network-scripts/ifcfg-eth0
    DEVICE=eth0 #物理设备名
    IPADDR=192.168.1.10 #IP地址
    NETMASK=255.255.255.0 #掩码值
    GATEWAY=192.168.1.1 #网关地址
    ONBOOT=yes # [yes|no]（引导时是否激活设备）
    USERCTL=no #[yes|no]（非root用户是否可以控制该设备）
    BOOTPROTO=static #[none|static|bootp|dhcp]（引导时不使用协议|静态分配|BOOTP协议|DHCP协议）
    DNS1=8.8.8.8  #dns
    
ifconfig # 查看所有网络接口的属性
netstat -antp # 查看所有tcp连接，t代表tcp
ss -at  #查看所有tcp连接,比netstat要快


nslookup domain
route -n # 查看路由表


【包管理】
rpm 是一个开放的软件包管理系统，最初的全称是 Red Hat Package Manager
    rpm -qa   query all
    rpm -i jdk-XXX_linux-x64_bin.rpm  
    rpm -e    erase


dpkg
    dpkg -l
    dpkg -i jdk-XXX_linux-x64_bin.deb  debian下的安装
    dpkg -r   remove


yum         yum安装的包也是rpm的包
    yum search jdk
    yum install java-11-openjdk.x86_64
    yum erase java-11-openjdk.x86_64
    库地址：/etc/yum.repos.d/CentOS-Base.repo 
apt-get    
    apt-cache search jdk
    apt-get install openjdk-9-jdk 
    apt-get purge openjdk-9-jdk
    库地址：/etc/apt/sources.list




【工具】
rzsz yum install -y lrzsz      sz filename  下载    rz 上传
echo ddd | md5sum
wget -c  xxx    断点续传
ssh  ip  ssh登录




mail命令发送邮件
    mail -s test yangfang@fudan.edu.cn #第一种方法，你可以把当前shell当成编辑器来用，编辑完内容后Ctrl-D结束
    echo “mail content”|mail -s test yangfang@fudan.edu.cn #第二种方法，我用的最多，可能是喜欢管道的缘故吧
    mail -s test yangfang@fudan.edu.cn < file #第三种方法，以file的内容为邮件内容发信


nginx php mysql redis之类的可以都放到 uer/local/web目录下，方便查找


【符号】
<<<   here string， md5sum <<< ddd  等同于 echo ddd | md5sum
<<    here document
    md5sum << END
    ddd
    END






【shell script】
shift命令用于对参数的移动(左移)




【环境变量】
$PATH


【limit】
ulimit -n   查看最大fd
查看所有进程打开的句柄数,输出：fds pid
CentOS 7中的lsof是按PID/TID/file的组合显示结果的,多个线程中会重复打印同一个fd
同一个进程如果多个线程访问同一个文件通常只需要打开一次、占用一个fd，但在lsof中就显示多行。
下面的命令其实也没有太大意义
lsof -n|awk '{print $2}'|sort|uniq -c|sort -nr|less


这个比较准：
find /proc -print | grep -P '/proc/\d+/fd/'| awk -F '/' '{print $3}' | uniq -c | sort -rn | head




看某个具体的进程：
    lsof  -n -p <pid>
    ls -l /proc/<pid>/fd | wc -l












【其他有用的命令】
strace  
    可以跟踪系统调用的执行  
    用法：strace -p pid


hexdump -C test.bc   查看二进制文件







