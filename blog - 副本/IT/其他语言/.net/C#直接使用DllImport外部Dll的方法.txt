每种编程语言调用DLL的方法都不尽相同，在此只对用C#调用DLL的方法进行介绍。首先,您需要了解什么是托管,什么是非托管。一般可以认为：非托管代码主要是基于win 32平台开发的DLL，activeX的组件，托管代码是基于.net平台开发的。如果您想深入了解托管与非托管的关系与区别，及它们的运行机制，请您自行查找资料，本文件在此不作讨论。

(一)     调用DLL中的非托管函数一般方法



首先，应该在C#语言源程序中声明外部方法，其基本形式是：



[DLLImport(“DLL文件”)]
修饰符 extern 返回变量类型 方法名称 （参数列表）





返回变量类型、方法名称、参数列表一定要与DLL文件中的定义相一致。


若要使用其它函数名，可以使用EntryPoint属性设置，如：
[DllImport("user32.dll", EntryPoint="MessageBoxA")]  
static extern int MsgBox(int hWnd, string msg, string caption, int type);
